%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 201 324 395 518 
%%LanguageLevel: 1
%%Creator: CorelDRAW 9
%%Title: Human_Resources.eps
%%CreationDate: Wed Jan 19 17:14:32 2000
%%DocumentProcessColors: Cyan Magenta Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 9 Version 9.397
%Color profile: Disabled
%%BeginResource: procset wCorel9Dict 9.0 0
/wCorel9Dict 300 dict def wCorel9Dict begin
% Copyright (c)1992-1999 Corel Corporation
% All rights reserved.     v9.0 r0.5
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CurrentInkName_5 where{pop}{/CurrentInkName_5(Composite)def}
ifelse/$ink_5 where{pop}{/$ink_5 -1 def}ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0
def/$t 1 def/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def
/$T 1 def/$N _ def/$O 0 def/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0
def/s1t 0 def/s1n _ def/$bkg false def/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op
false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm
matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/$fst 128 def/$pad 0 def/$rox 0 def/$roy 0 def/$fmp 50 def/@dlt_hsb{$fco nff ge
{/$fco nff 1 sub def}if sub neg 2 div dup $fco div/kdb xd nff $fco sub div
/kdb2 xd sub neg 2 div dup $fco div/kds xd nff $fco sub div/kds2 xd sub neg dup
0 eq{pop $frb 2 eq{.99}{-.99}ifelse}if dup $frb 2 eq exch 0 lt and{1 add}if dup
$frb 1 eq exch 0 gt and{1 sub}if 2 div dup $fco div/kdh xd nff $fco sub div
/kdh2 xd}bd/@dlt_cmyk{$fmp 50 eq{sub neg nff dup 1 gt{1 sub}if div/$dk xd sub
neg nff dup 1 gt{1 sub}if div/$dy xd sub neg nff dup 1 gt{1 sub}if div/$dm xd
sub neg nff dup 1 gt{1 sub}if div/$dc xd sub neg nff dup 1 gt{1 sub}if div/$dt
xd}{$fco nff ge{/$fco nff 1 sub def}if sub neg 2 div dup $fco div/$dk xd nff
$fco sub div/$dk2 xd sub neg 2 div dup $fco div/$dy xd nff $fco sub div/$dy2 xd
sub neg 2 div dup $fco div/$dm xd nff $fco sub div/$dm2 xd sub neg 2 div dup
$fco div/$dc xd nff $fco sub div/$dc2 xd sub neg 2 div dup $fco div/$dt xd nff
$fco sub div/$dt2 xd}ifelse}bd/@dlt{$fse $fss sub dup/nff xd $fmp mul $fmp add
100 div round cvi dup 0 le{pop 1}if/$fco xd/$fi 0 def $frb dup 1 eq exch 2 eq
or{$frt dup $frc $frm $fry $frk @tc_5 4 copy cmyk2rgb rgb2hsb 3 copy/myb xd
/mys xd/myh xd $tot $toc $tom $toy $tok @tc_5 cmyk2rgb rgb2hsb 3 1 roll 4 1
roll 5 1 roll @dlt_hsb}{$frt dup $frc $frm $fry $frk @tc_5 5 copy $tot dup $toc
$tom $toy $tok @tc_5 5 1 roll 6 1 roll 7 1 roll 8 1 roll 9 1 roll @dlt_cmyk}
ifelse}bd/@ffnxt{/$fi $fi 1 add def $frb dup 1 eq exch 2 eq or{pop pop pop pop
myh mys myb $fi $fco lt{kdb add 3 1 roll kds add 3 1 roll kdh add 3 1 roll}{
kdb2 add 3 1 roll kds2 add 3 1 roll kdh2 add 3 1 roll}ifelse 3 copy/myb xd/mys
xd/myh xd hsb2rgb rgb2cmyk}{$fi $fco lt $fmp 50 eq or{$dk add 5 1 roll $dy add
5 1 roll $dm add 5 1 roll $dc add 5 1 roll $dt add 5 1 roll}{$dk2 add 5 1 roll
$dy2 add 5 1 roll $dm2 add 5 1 roll $dc2 add 5 1 roll $dt2 add 5 1 roll}ifelse
}ifelse}bd/ffcol{5 copy $fsit 0 eq{setcmykcolor pop}{SepMode_5 0 ne{$frn
findcmykcustomcolor exch setcustomcolor}{pop pop pop pop $frc $frm $fry $frk
$frn findcmykcustomcolor exch setcustomcolor}ifelse}ifelse}bd/@ftl{1 index 4
index sub dup $pad mul dup/$pdw xd 2 mul sub $fst div/$wid xd 2 index sub/$hei
xd pop Tl @dlt $fss 0 eq{ffcol n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l @cp $ffpnt
{fill}{@np}ifelse}if $fss $wid mul $pdw add 0 Tl nff{ffcol n 0 0 m 0 $hei l
$wid $hei l $wid 0 l @cp $ffpnt{fill}{@np}ifelse $wid 0 Tl @ffnxt}repeat 5 rp
$tot dup $toc $tom $toy $tok @tc_5 ffcol n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l
@cp $ffpnt{fill}{@np}ifelse 5 rp}bd/@ftrs{1 index 4 index sub dup $rox mul
/$row xd 2 div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul
exch dup mul add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst
div/$wid xd 4 index add $roh add exch 5 index add $row add exch Tl $fan rotate
pop pop pop pop @dlt $fss 0 eq{ffcol $fty 3 eq{$hei dup neg dup m 2 mul @sqr}{
0 0 m 0 0 $hei 0 360 arc}ifelse $ffpnt{fill}{@np}ifelse}if 1.0 $pad 2 mul sub
dup scale $hei $fss $wid mul sub/$hei xd nff{ffcol $fty 3 eq{n $hei dup neg dup
m 2 mul @sqr}{n 0 0 m 0 0 $hei 0 360 arc}ifelse $ffpnt{fill}{@np}ifelse/$hei
$hei $wid sub def @ffnxt}repeat 5 rp}bd/@ftc{1 index 4 index sub dup $rox mul
/$row xd 2 div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul
exch dup mul add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst
div/$wid xd 4 index add $roh add exch 5 index add $row add exch Tl pop pop pop
pop @dlt $fss 0 eq{ffcol $ffpnt{fill}{@np}ifelse}{n}ifelse/$dang 180 $fst 1 sub
div def/$sang $dang -2 div 180 add def/$eang $dang 2 div 180 add def/$sang
$sang $dang $fss mul add def/$eang $eang $dang $fss mul add def/$sang $eang
$dang sub def nff{ffcol n 0 0 m 0 0 $hei $sang $fan add $eang $fan add arc
$ffpnt{fill}{@np}ifelse 0 0 m 0 0 $hei $eang neg $fan add $sang neg $fan add
arc $ffpnt{fill}{@np}ifelse/$sang $eang def/$eang $eang $dang add def @ffnxt}
repeat 5 rp}bd/@fstAdjust{72 0 matrix defaultmatrix dtransform exch dup mul
exch dup mul add sqrt currentscreen pop pop div dup mul 1 add cvi 2 256 InRange
$fsc 1 sub dup 0 le{pop 1}if mul/opt$fst xd AutoSteps dup 1 eq exch 3 eq or{
opt$fst dup dup $fst dup 3 1 roll div exch 3 -1 roll gt{/$adj xd/$fst xd}{pop
pop}ifelse}if AutoSteps dup 2 eq exch 3 eq or{opt$fst dup dup $fst dup 3 1 roll
div exch 3 -1 roll lt{/$adj xd/$fst xd}{pop pop}ifelse}if}bd/@ff{/old$fst $fst
def/$adj 1 def/$fss 0 def $o 1 eq setoverprint AutoSteps 0 gt{@fstAdjust}if 1 1
$fsc 1 sub{dup 1 sub $fsit 0 eq{$fsa exch 5 mul 5 getinterval aload pop pop
/$frk xd/$fry xd/$frm xd/$frc xd/$frn _ def/$frt 1 def $fsa exch 5 mul 5
getinterval aload pop $adj mul cvi $fss add/$fse xd/$tok xd/$toy xd/$tom xd
/$toc xd/$ton _ def/$tot 1 def}{$fsa exch 7 mul 7 getinterval aload pop pop
/$frt xd/$frn xd/$frk xd/$fry xd/$frm xd/$frc xd $fsa exch 7 mul 7 getinterval
aload pop $adj mul cvi $fss add/$fse xd/$tot xd/$ton xd/$tok xd/$toy xd/$tom xd
/$toc xd}ifelse $fsit 0 eq SepMode_5 0 eq or dup not CurrentInkName_5 $frn eq
and or{@sv $ctm setmatrix wclip Bbllx Bblly Bburx Bbury $fty 2 eq{@ftc}{1 index
3 index m 2 copy l 3 index 1 index l 3 index 3 index l @cp $fty dup 1 eq exch 3
eq or{@ftrs}{pop pop pop pop $fan rotate pathbbox @ftl}ifelse}ifelse @rs/$fss
$fse def}{1 0 0 0 0 _ $o @scc_5{wfill}if}ifelse}for @np/$fst old$fst def}bd/@k
{/$fil 2 def/$fmp xd/$roy xd/$rox xd/$pad xd/$fty xd/$fan xd $fty 1 eq{/$fan 0
def}if/$frb xd/$fst xd/$fsc xd/$fsa xd/$fsit 0 def}bd/@x{/$fil 2 def/$fmp xd
/$roy xd/$rox xd/$pad xd/$fty xd/$fan xd $fty 1 eq{/$fan 0 def}if/$frb xd/$fst
xd/$fsc xd/$fsa xd/$fsit 1 def}bd
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld
@ftx}{$t $c $m $y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf
{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF
$SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1
roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel9Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
201.25984 324.56693 394.01575 517.32283 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
201.25984 517.32283 m
394.01575 517.32283 L
394.01575 324.56693 L
201.25984 324.56693 L
201.25984 517.32283 L
@c
F

@rax %Note: Object
296.51301 381.18529 381.47074 438.47235 @E
0 O 0 @g
[ 1.00 1.00 0.00 0.00  0
1.00 0.00 0.00 0.00  128
] 2 128 0 45.00 0 0.09 0 0 50 @k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 0.00 K
[1.62529910 0.00000000 0.00000000 1.64223828 96348.77787057 11465.69602454] 1 1.59761 1.59761 0.00000 @w
/$fm 0 def
324.94932 424.19509 m
353.03443 424.19509 l
368.59833 424.19509 381.47074 411.30680 381.47074 395.46255 C
296.51301 395.46255 L
296.51301 411.30680 309.38542 424.19509 324.94932 424.19509 c
@c
B

@rax %Note: Object
253.72828 381.18529 338.68602 438.47235 @E
0 O 0 @g
[ 1.00 1.00 0.00 0.00  0
1.00 0.00 0.00 0.00  128
] 2 128 0 45.00 0 0.09 0 0 50 @k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 0.00 K
[1.62529910 0.00000000 0.00000000 1.64223828 -54586.69247737 11465.69602454] 1 1.59761 1.59761 0.00000 @w
/$fm 0 def
282.16431 424.19509 m
310.24942 424.19509 l
325.81332 424.19509 338.68573 411.30680 338.68573 395.46255 C
253.72828 395.46255 L
253.72828 411.30680 266.60041 424.19509 282.16431 424.19509 c
@c
B

@rax %Note: Object
211.49263 381.18529 296.45036 438.47235 @E
0 O 0 @g
[ 1.00 1.00 0.00 0.00  0
1.00 0.00 0.00 0.00  128
] 2 128 0 45.00 0 0.09 0 0 50 @k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 0.00 K
[1.62529910 0.00000000 0.00000000 1.64223828 -203584.83473450 11465.69602454] 1 1.59761 1.59761 0.00000 @w
/$fm 0 def
239.92866 424.19509 m
268.01405 424.19509 l
283.57767 424.19509 296.45008 411.30680 296.45008 395.46255 C
211.49263 395.46255 L
211.49263 411.30680 224.36504 424.19509 239.92866 424.19509 c
@c
B

@rax 209.22123 358.01943 386.05436 382.59666 @E
[0.00044584 0.00000000 0.00000000 0.00045049 297.24143564 361.79538149] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/Mistral 63500.00000 z
%CHAR: -197423 0 (H) @t
-190184 12584 m
-190184 14108 -188406 15822 -187580 16203 C
-186564 16203 -185548 16330 -184151 17092 c
-181548 18553 -176976 18553 -173991 18870 C
-173991 16838 -175261 8774 -176277 6742 C
-176277 2106 -177611 -1905 -177611 -6350 C
-177103 -6350 -176595 -6858 -175071 -6350 C
-173547 -2413 -174626 -8382 -172023 2614 c
-169864 7567 -170880 13917 -168086 18553 C
-167895 20458 -167641 21347 -167641 22299 C
-165990 26871 -165419 30237 -165419 34047 c
-163196 45350 -164911 46175 -169038 41603 c
-169864 40016 -170626 39825 -171515 38174 C
-170753 33539 -172467 24268 -172975 23252 C
-174817 22490 -178119 22490 -180024 22744 C
-182437 22045 -185104 22490 -187771 21791 c
-190692 20839 -188279 26681 -188025 29792 c
-187898 31316 -187199 33539 -186374 39000 c
-184151 44397 -189993 43635 -192216 41286 C
-192597 40460 -192597 37539 -192978 35444 c
-193613 30618 -194121 26046 -194629 21347 c
-195137 19315 -196597 17664 -197042 16013 C
-196724 14616 -195899 12965 -195137 11314 C
-196026 8393 -194502 2932 -194629 709 c
-194946 -1715 -191835 -3048 -189549 709 c
-189041 2106 -187580 3630 -187072 5091 C
-187072 6551 -188596 5091 -189549 4138 C
-190692 4964 -190184 10679 -190184 12584 c
@c
F
%CHAR: -167769 0 (u) @t
-161546 265 m
-156466 -1969 -152211 4392 -149862 7821 c
-148655 9091 -149608 3059 -144591 3186 c
-142051 3186 -141289 4392 -139257 5281 c
-137670 5662 -138178 10234 -138559 10234 C
-139956 9790 -143194 5218 -144020 11441 C
-144020 11441 -143194 15759 -146306 15759 c
-148655 15695 -149735 12203 -151767 9917 c
-152529 8774 -154497 6996 -155196 5853 C
-156085 5535 -156910 4265 -157291 4773 c
-158244 6170 -157672 11314 -156783 13663 C
-156783 15568 -154243 19886 -155323 21220 c
-156085 21918 -157799 21093 -159133 20140 C
-161038 16965 -164022 12584 -166943 10107 c
-168478 8964 -168097 5281 -167642 5281 c
-166943 5281 -164721 8012 -164149 8520 c
-162625 9790 -164340 2233 -161546 265 c
@c
F
%CHAR: -138686 0 (m) @t
-132653 201 m
-132145 201 -131193 2297 -130050 2741 C
-128526 5281 -124716 8393 -123763 9790 c
-119445 13727 -118239 13917 -119699 8710 c
-120715 4265 -122049 1789 -122049 328 C
-121541 -826 -120715 -1778 -118620 201 c
-117540 1154 -113794 5535 -112841 6424 c
-111317 7377 -110682 8710 -109603 8964 c
-107063 8964 -105666 5154 -103634 4075 c
-99506 1725 -97093 4773 -95950 6170 C
-95950 7885 -96077 8393 -95950 10298 C
-97093 10298 -98617 6742 -100586 8837 c
-101665 10298 -101665 10679 -102554 11822 C
-104459 19442 -111317 12266 -114111 9472 C
-114111 12584 -112714 15759 -112714 18870 c
-112841 22871 -115953 22109 -119572 18045 c
-122493 15632 -122176 14806 -125097 12774 c
-128018 9790 -125922 14298 -125605 17346 c
-125287 19569 -126303 21474 -129669 19315 c
-130748 18870 -132272 16838 -133479 15632 c
-135193 13600 -137733 11822 -139014 9472 C
-139014 8393 -138887 7377 -138887 5662 C
-137098 6170 -134368 11822 -132844 11123 c
-131637 10679 -135193 2614 -135193 1154 c
-135193 -191 -133352 -508 -132653 201 C
@c
F
%CHAR: -95696 0 (a) @t
-95569 6361 m
-94362 5662 -94489 5218 -94997 3948 C
-94997 2233 -95251 1471 -94045 963 C
-93473 -381 -91251 -191 -90171 963 C
-88647 963 -87441 2741 -86552 3757 C
-84393 4773 -82805 7567 -80138 9155 C
-80138 7059 -78678 1916 -74614 3059 C
-73026 2614 -71820 4265 -70486 4773 C
-70296 5218 -69216 5853 -69026 6361 C
-69216 6869 -69343 7186 -69026 8202 C
-69216 9282 -69026 10298 -69343 10107 C
-69978 9409 -69978 9155 -70994 8774 C
-73407 6869 -75757 9282 -74423 12901 C
-74868 13917 -74614 16521 -76519 15886 C
-77852 16013 -80964 13409 -81472 12393 C
-83504 11123 -84393 10298 -84901 9282 C
-85917 8774 -87314 7186 -88520 7186 C
-88520 7694 -88012 8393 -87822 8774 c
-87441 9282 -85345 11822 -84393 12711 c
-83250 13409 -82297 14743 -81916 15441 C
-80456 15695 -77217 19315 -76455 20775 C
-74423 21791 -73788 22871 -73407 23887 C
-75249 26808 -78360 24522 -81789 22172 c
-84520 19315 -89346 17156 -91124 13536 C
-93473 11441 -94870 10806 -94997 9790 c
-95569 6361 L
@c
F
%CHAR: -69026 0 (n) @t
-60834 -1397 m
-59564 328 -55945 3821 -54738 5726 C
-50801 8393 -50357 11123 -48515 7885 C
-47182 6869 -46166 4075 -45086 2995 c
-42165 1027 -39435 4646 -37530 6424 C
-37784 6869 -37911 9155 -37911 10171 C
-38863 9980 -39625 7250 -41340 8393 c
-43054 9472 -44134 13473 -45086 15378 C
-49595 17727 -53405 11822 -56072 8964 c
-57151 7885 -57532 6742 -57850 6869 C
-58358 7758 -56770 11504 -56262 13219 c
-55564 14425 -54611 17346 -55437 19315 c
-56643 22680 -59374 20331 -60580 19823 C
-63120 16902 -66549 14298 -68327 10806 C
-69481 9980 -68962 8202 -68962 6869 C
-69481 5345 -68835 5154 -67819 6742 c
-66867 7758 -65914 8710 -64390 10679 c
-63819 11504 -61279 12266 -62739 9155 c
-63311 6742 -64200 4773 -63882 4075 C
-64390 2297 -65406 1344 -64835 -318 C
-65089 -1143 -65089 -1778 -64835 -1905 c
-64009 -2286 -61279 -2413 -60834 -1397 c
@c
F
%CHAR: -12891 0 (R) @t
-7684 -2223 m
-6223 -2223 -5906 6615 -4890 9409 C
-1461 7567 -254 6234 1460 5027 c
6413 1598 11239 -1080 16700 -3747 c
20701 -6985 20002 1408 16446 1408 C
15748 2360 14478 2995 13970 2995 C
11811 5027 7683 8139 5715 9409 c
3873 10869 -762 14489 -1334 16965 c
-1969 18870 4572 19886 7429 21855 c
10350 23442 16891 27443 17399 28903 c
17907 30491 18986 34110 17081 36777 C
14605 38746 10731 41349 8699 42302 c
3619 44588 -1969 44905 -3429 44397 c
-9843 42810 -8319 36396 -8319 31443 c
-8319 28395 -8001 20521 -8509 18616 c
-8827 18045 -9843 17410 -10732 16965 C
-12065 14870 -10605 13663 -9335 12330 C
-9017 10361 -10097 2995 -10097 1090 c
-10224 -445 -9462 -2096 -7684 -2223 c
@c
9969 27887 m
6223 25347 1968 21537 -2794 20839 C
-2794 22363 -2858 25474 -1080 30364 c
-254 34110 -2794 35253 -4890 32840 C
-6223 33285 -5588 35444 -5588 36396 C
-4890 37920 -3683 37666 -1778 37920 C
190 37539 4572 36841 5715 36396 c
9144 35126 15240 32015 9969 27887 c
@c
F
%CHAR: 18542 0 (e) @t
20574 2424 m
26670 -2604 31687 3440 37338 5726 C
37783 6361 37783 7250 37783 8837 C
38735 11504 35433 8202 34989 8202 C
34481 7694 33909 7567 33211 6996 c
30861 5726 22733 3948 24511 9472 C
25210 9980 26035 10298 26670 11377 C
29591 12774 33211 17473 33084 18362 C
34354 18870 33973 22490 33084 22871 C
31179 25030 27940 24077 27432 23061 C
26035 22299 24511 20966 23432 19569 C
22416 19188 21590 17029 20701 15822 c
19876 14298 18468 10996 18468 9980 c
18606 3821 20574 3821 20574 2424 C
@c
28258 18172 m
29464 17473 27051 15124 26670 14933 C
26543 14425 25527 13727 24829 13727 c
23876 13600 24829 15124 24956 15378 c
25845 16521 27432 18172 28258 18172 C
@c
F
%CHAR: 37910 0 (s) @t
37974 5789 m
38926 6107 42355 10488 45022 12330 c
46737 13155 47372 15505 48388 13473 C
48578 11885 48197 8393 47943 6107 C
47245 4519 47118 6742 46356 6615 c
45848 6615 42990 5599 43943 3186 C
43943 1217 44133 -953 45149 -2350 C
45149 -4890 47562 -3048 48769 -2540 C
49277 -1715 49721 -1461 50674 -953 C
53468 1852 59500 4138 58421 8837 c
58421 11885 56897 9028 55944 7567 C
55246 7313 53023 4392 51817 4519 C
51499 5345 52706 7948 53404 9917 c
53785 12076 54801 14870 54420 17092 C
56452 19696 53023 24649 50039 22045 c
48197 20140 46356 17219 44133 16076 C
42546 13790 38926 10361 38545 10361 C
36756 9663 38418 7123 37974 5789 C
@c
F
%CHAR: 57722 0 (o) @t
63755 900 m
64326 -127 65787 -127 67247 -318 c
72137 0 74105 2805 76264 4837 C
76709 5789 77725 6615 78169 7123 C
78360 7948 79693 9345 80392 10869 c
81471 13473 81281 15822 80519 18426 C
78677 20966 75756 20839 73153 19315 C
72454 19823 74550 21347 73343 21855 C
72708 21855 71502 22172 70676 21855 C
69025 20013 66485 18426 65279 16394 C
64326 15886 59246 10869 57849 9536 C
57849 8837 57849 8837 57849 8393 C
58548 8075 57722 6424 58103 5789 C
59056 5789 60643 8774 62231 8774 C
62231 6234 59945 1725 63755 900 C
@c
75375 8647 m
74423 7440 73724 6424 72137 5408 c
69724 3313 66676 2995 67247 6424 c
67247 7440 68073 9663 69216 11187 C
70676 11187 71311 12965 72327 13917 c
76455 16711 77344 10552 75375 8647 c
@c
77979 1789 m
78677 1725 80519 3440 81598 4011 C
82614 5027 85408 5789 85281 7948 C
84202 10996 84202 9917 82297 8266 C
81281 6234 80392 6424 79376 5027 c
78550 4329 76709 2170 77979 1789 c
@c
F
%CHAR: 84646 0 (u) @t
90869 265 m
95949 -1969 100204 4392 102553 7821 c
103760 9091 102807 3059 107824 3186 c
110364 3186 111126 4392 113158 5281 c
114745 5662 114237 10234 113856 10234 C
112459 9790 109221 5218 108395 11441 C
108395 11441 109221 15759 106109 15759 c
103760 15695 102680 12203 100648 9917 c
99886 8774 97918 6996 97219 5853 C
96330 5535 95505 4265 95124 4773 c
94171 6170 94743 11314 95632 13663 C
95632 15568 98172 19886 97092 21220 c
96330 21918 94616 21093 93282 20140 C
91377 16965 88393 12584 85472 10107 c
83937 8964 84318 5281 84773 5281 c
85472 5281 87694 8012 88266 8520 c
89790 9790 88075 2233 90869 265 c
@c
F
%CHAR: 113729 0 (r) @t
113729 6234 m
113083 4837 114555 6043 115825 8266 C
117222 9472 118492 10806 118492 11314 C
121603 14743 122683 15568 123699 13600 c
125032 11314 124207 9282 123064 3757 C
122048 2106 120397 -1778 124524 -1461 C
125667 -1715 127953 455 129414 836 C
131446 2297 134049 4837 134494 4837 C
134176 5853 136145 7059 135383 8710 C
135510 9853 135002 10298 134494 9282 c
133668 8266 129223 4837 128779 4837 C
126302 3249 129541 8774 129795 12139 c
130049 15314 127318 21156 123572 21410 C
122048 21982 120397 20331 119444 19251 C
118047 18870 118492 17854 118746 16711 C
117857 16203 117476 14933 116968 14425 C
116523 13409 114237 10298 113528 9282 C
113210 8012 113729 6678 113729 6234 C
@c
F
%CHAR: 135446 0 (c) @t
136716 10488 m
135764 10044 135446 10361 135764 7123 c
135181 3313 136907 7948 137288 6361 C
137859 5345 137288 3948 138494 1789 C
139193 1344 139701 900 140399 392 c
144717 -2794 150496 709 154052 3313 c
155068 3821 157671 5789 158116 7123 C
158052 8266 157671 8774 158116 9345 C
157671 9790 157227 10869 156846 9790 C
156846 8393 151004 5154 149289 4329 c
147638 3694 143828 3821 143574 6043 c
142114 11695 149670 13473 150877 15505 C
154306 17219 156719 19251 155068 22680 C
152591 23061 149797 20839 149162 20140 C
146495 18870 139828 13790 139828 12774 C
138367 12266 136716 10488 136716 10488 C
@c
F
%CHAR: 158243 0 (e) @t
160275 2424 m
166371 -2604 171388 3440 177039 5726 C
177484 6361 177484 7250 177484 8837 C
178436 11504 175134 8202 174690 8202 C
174182 7694 173610 7567 172912 6996 c
170562 5726 162434 3948 164212 9472 C
164911 9980 165736 10298 166371 11377 C
169292 12774 172912 17473 172785 18362 C
174055 18870 173674 22490 172785 22871 C
170880 25030 167641 24077 167133 23061 C
165736 22299 164212 20966 163133 19569 C
162117 19188 161291 17029 160402 15822 c
159577 14298 158169 10996 158169 9980 c
158307 3821 160275 3821 160275 2424 C
@c
167959 18172 m
169165 17473 166752 15124 166371 14933 C
166244 14425 165228 13727 164530 13727 c
163577 13600 164530 15124 164657 15378 c
165546 16521 167133 18172 167959 18172 C
@c
F
%CHAR: 177611 0 (s) @t
177675 5789 m
178627 6107 182056 10488 184723 12330 c
186438 13155 187073 15505 188089 13473 C
188279 11885 187898 8393 187644 6107 C
186946 4519 186819 6742 186057 6615 c
185549 6615 182691 5599 183644 3186 C
183644 1217 183834 -953 184850 -2350 C
184850 -4890 187263 -3048 188470 -2540 C
188978 -1715 189422 -1461 190375 -953 C
193169 1852 199201 4138 198122 8837 c
198122 11885 196598 9028 195645 7567 C
194947 7313 192724 4392 191518 4519 C
191200 5345 192407 7948 193105 9917 c
193486 12076 194502 14870 194121 17092 C
196153 19696 192724 24649 189740 22045 c
187898 20140 186057 17219 183834 16076 C
182247 13790 178627 10361 178246 10361 C
176457 9663 178119 7123 177675 5789 C
@c
F
T
@rax %Note: Object
311.47002 427.53685 367.22268 483.87061 @E
0 O 0 @g
[ 1.00 1.00 0.00 0.00  0
1.00 0.00 0.00 0.00  128
] 2 128 0 45.00 0 0.00 0 0 50 @k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 0.00 K
[0.77589369 0.00000000 0.00000000 0.78398020 48796.17927787 221987.99826503] 1 3.34630 3.34630 0.00000 @w
/$fm 0 def
339.34592 483.87061 m
354.69978 483.87061 367.22268 471.21732 367.22268 455.70387 c
367.22268 440.19014 354.69978 427.53685 339.34592 427.53685 c
323.99235 427.53685 311.47002 440.19014 311.47002 455.70387 c
311.47002 471.21732 323.99235 483.87061 339.34592 483.87061 c
@c
B

@rax %Note: Object
268.78479 427.53685 324.53745 483.87061 @E
0 O 0 @g
[ 1.00 1.00 0.00 0.00  0
1.00 0.00 0.00 0.00  128
] 2 128 0 45.00 0 0.00 0 0 50 @k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 0.00 K
[0.77589369 0.00000000 0.00000000 0.78398020 -101787.04959902 221987.99826503] 1 3.34630 3.34630 0.00000 @w
/$fm 0 def
296.66098 483.87061 m
312.01483 483.87061 324.53745 471.21732 324.53745 455.70387 c
324.53745 440.19014 312.01483 427.53685 296.66098 427.53685 c
281.30740 427.53685 268.78479 440.19014 268.78479 455.70387 c
268.78479 471.21732 281.30740 483.87061 296.66098 483.87061 c
@c
B

@rax %Note: Object
226.39946 427.53685 282.15213 483.87061 @E
0 O 0 @g
[ 1.00 1.00 0.00 0.00  0
1.00 0.00 0.00 0.00  128
] 2 128 0 45.00 0 0.00 0 0 50 @k
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 0.00 K
[0.77589369 0.00000000 0.00000000 0.78398020 -251313.55406273 221987.99826503] 1 3.34630 3.34630 0.00000 @w
/$fm 0 def
254.27565 483.87061 m
269.62923 483.87061 282.15213 471.21732 282.15213 455.70387 c
282.15213 440.19014 269.62923 427.53685 254.27565 427.53685 c
238.92208 427.53685 226.39946 440.19014 226.39946 455.70387 c
226.39946 471.21732 238.92208 483.87061 254.27565 483.87061 c
@c
B

 @gs spg @gr
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel9Dict 9.0 0
%%EOF
