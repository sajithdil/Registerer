/*defining sequelize instance that will act as driver between ORM mappings and the DBbasically this has been defined as a singleton valuethe first time the instance is called it will be initialized, after that it will just return the variable*///all modules called as node_modulesdefine(["require", "exports", "module","sequelize"],function(require, exports, module,Sequelize){	//sequelize instance	var sequelize_instance = null;		if(sequelize_instance == null)	{		//console.log('null point');		//sequelize_instance =new Sequelize('employees', 'root', '', {				// test connection to test sequelize		sequelize_instance =new Sequelize('employees', 'root', '', {			host: "127.0.0.1",			port: 3306		});				//testing sequelize connection		/*var Employee = sequelize_instance.define('employees', {			//emp_no is the primary key for this table			title: Sequelize.STRING,			description: Sequelize.TEXT,			flag: { type: Sequelize.BOOLEAN, allowNull: false, defaultValue: true}			idt: {type:Sequelize.INTEGER, unique: true}		},{			timestamps :false,				classMethods: {					testM: function(){ console.log('test'); }			}			}	);		//testing sequelize connection	Employee.find();*/		}	//module.exports makes it avaliable as a global instance	module.exports = sequelize_instance;		//return the sequelize instance	return	{		sequelize : sequelize_instance	}});